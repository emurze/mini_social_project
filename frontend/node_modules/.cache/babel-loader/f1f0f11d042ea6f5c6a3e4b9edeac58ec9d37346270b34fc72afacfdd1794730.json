{"ast":null,"code":"var _jsxFileName = \"/home/adm1/Desktop/react/projects/project_1/frontend/src/components/Main/Pages/Users/Users.jsx\",\n  _s = $RefreshSig$();\nimport './Users.css';\nimport PageTitle from \"../../../../shared/PageTitle/PageTitle\";\nimport ItemUser from \"./ItemUser/ItemUser\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { HideLoadedUsers, SetCurrentPage, SetPageCount, SetPageSize, SetUsers, ToggleIsFetching, UpdateCurrentPageOnArrows } from \"../../../../redux/ActionCreators\";\nimport axios from \"axios\";\nimport React, { useEffect } from 'react';\nimport LeftArrow from \"../../../../shared/LeftArrow/LeftArrow\";\nimport RightArrow from \"../../../../shared/RightArrow/RightArrow\";\nimport { UsersPaginationActions } from \"../../../../redux/UsersPaginationActions\";\nimport Preloader from \"../../../../shared/Preloader/Preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = props => {\n  _s();\n  let dispatch = useDispatch();\n  let {\n    users,\n    page_size,\n    page_count,\n    current_page,\n    isFetching\n  } = useSelector(state => state.usersPage);\n  const updateCurrentPageOnArrows = (current_page, pagination_action) => {\n    const URL = `http://192.168.100.8:8080/api/v1/profile?page=\n\t\t             ${current_page}`;\n    props.HideLoadedUsers();\n    props.toggleIsFetching(true);\n    axios.get(URL).then(response => {\n      props.update_current_page_on_arrows(pagination_action);\n      return setBase(response, props);\n    }).catch(error => console.log(`FAIL ${error}`));\n  };\n  const updateCurrentPage = current_page => {\n    const URL = `http://192.168.100.8:8080/api/v1/profile?page=\n\t\t\t\t\t ${current_page}`;\n    props.HideLoadedUsers();\n    props.toggleIsFetching(true);\n    axios.get(URL).then(response => {\n      props.set_current_page(current_page);\n      return setBase(response, props);\n    }).catch(error => console.log(`FAIL ${error}`));\n  };\n  const setBase = (response, props) => {\n    props.toggleIsFetching(false);\n    props.set_users(response);\n    props.set_page_size(response.data.results.length);\n    props.set_page_count(response.data.count);\n    return response;\n  };\n  useEffect(() => {\n    const BASE_URL = 'http://192.168.100.8:8080/api/v1/profile?page=1';\n    props.toggleIsFetching(true);\n    axios.get(BASE_URL).then(response => {\n      return setBase(response, this.props);\n    }).catch(error => console.log(`FAIL ${error}`));\n  }, []);\n  const user_items = props.users.map(user => /*#__PURE__*/_jsxDEV(ItemUser, {\n    id: user.id,\n    name: user.username,\n    description: user.description,\n    country: user.country,\n    city: user.city\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 11\n  }, this));\n  const pages = props.page_count / props.page_size;\n  const page_numbers = pages ? [...Array(pages + 1).keys()].splice(1) : [];\n  const previous = () => updateCurrentPageOnArrows(props.current_page, UsersPaginationActions.Previous);\n  const next = () => updateCurrentPageOnArrows(props.current_page, UsersPaginationActions.Next);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"users\",\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      title: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users__body\",\n      children: [props.isFetching && /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 27\n      }, this), user_items]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"pagination__left_arrow\",\n          onClick: previous,\n          children: /*#__PURE__*/_jsxDEV(LeftArrow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this), page_numbers.map(page_number => {\n          const classname = `pagination__item${props.current_page === page_number ? \" selected\" : \"\"}`;\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classname,\n            onClick: () => updateCurrentPage(page_number),\n            children: page_number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 8\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"pagination__right_arrow\",\n          onClick: next,\n          children: /*#__PURE__*/_jsxDEV(RightArrow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(Users, \"/hkKTNHqic/bpKruou92iA2UZaY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Users;\nconst mapDispatchToProps = dispatch => ({\n  set_users: response => dispatch(SetUsers(response.data.results)),\n  set_page_size: page_size => dispatch(SetPageSize(page_size)),\n  set_page_count: page_count => dispatch(SetPageCount(page_count)),\n  set_current_page: current_page => dispatch(SetCurrentPage(current_page)),\n  update_current_page_on_arrows: pagination_action => {\n    dispatch(UpdateCurrentPageOnArrows(pagination_action));\n  },\n  toggleIsFetching: isFetching => dispatch(ToggleIsFetching(isFetching)),\n  HideLoadedUsers: () => dispatch(HideLoadedUsers())\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\n\n// class Users extends React.Component {\n// \trender() {\n// \t\tlet props = this.props\n// \t\tconst user_items = props.users.map(\n// \t\t\tuser => <ItemUser key={ user.id }\n// \t\t\t\t\t\t\t  id={ user.id }\n// \t\t\t\t\t\t\t  name={ user.username }\n// \t\t\t\t\t\t\t  description={ user.description }\n// \t\t\t\t\t\t\t  country={ user.country }\n// \t\t\t\t\t\t\t  city={ user.city }/>)\n//\n// \t\tconst pages = props.page_count / props.page_size\n// \t\tconst page_numbers = pages ? [...Array(pages+1).keys()].splice(1) : []\n// \t\tconst previous = () => this.updateCurrentPageOnArrows(\n// \t\t\tprops.current_page, UsersPaginationActions.Previous\n// \t\t)\n// \t\tconst next = () => this.updateCurrentPageOnArrows(\n// \t\t\tprops.current_page, UsersPaginationActions.Next\n// \t\t)\n// \t\treturn <div className='users'>\n// \t\t\t\t<PageTitle title='Users'/>\n// \t\t\t\t<div className=\"users__body\">\n// \t\t\t\t\t{ props.isFetching && <Preloader/>}\n// \t\t\t\t\t{ user_items }\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"pagination\">\n// \t\t\t\t\t<div className=\"pagination__container\">\n// \t\t\t\t\t\t<span className='pagination__left_arrow'\n// \t\t\t\t\t\t\t  onClick={ previous }>\n// \t\t\t\t\t\t\t<LeftArrow/>\n// \t\t\t\t\t\t</span>\n// \t\t\t\t\t\t{ page_numbers.map(page_number => {\n// \t\t\t\t\t\t\tconst classname = `pagination__item${\n// \t\t\t\t\t\t\t\tprops.current_page === page_number ? \" selected\" : \"\"\n// \t\t\t\t\t\t\t}`\n// \t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t<span className={ classname }\n// \t\t\t\t\t\t\t\t\t  onClick={\n// \t\t\t\t\t\t\t\t\t  () => this.updateCurrentPage(page_number)\n// \t\t\t\t\t\t\t\t\t  }>\n// \t\t\t\t\t\t\t\t\t  { page_number }\n// \t\t\t\t\t\t\t\t</span>)\n// \t\t\t\t\t\t}) }\n// \t\t\t\t\t\t<span className='pagination__right_arrow'\n// \t\t\t\t\t\t\t  onClick={ next }>\n// \t\t\t\t\t\t\t<RightArrow/>\n// \t\t\t\t\t\t</span>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t}\n// \tupdateCurrentPageOnArrows(current_page, pagination_action) {\n// \t\tconst URL = `http://192.168.100.8:8080/api/v1/profile?page=\n// \t\t\t\t\t ${current_page}`\n// \t\tthis.props.HideLoadedUsers()\n// \t\tthis.props.toggleIsFetching(true)\n// \t\taxios.get(URL)\n// \t\t\t.then(response => {\n// \t\t\t\tthis.props.toggleIsFetching(false)\n// \t\t\t\tthis.props.update_current_page_on_arrows(pagination_action)\n// \t\t\t\treturn this.setBase(response, this.props)\n// \t\t\t})\n// \t\t\t.catch(error => console.log(`FAIL ${error}`))\n// \t}\n// \tupdateCurrentPage(current_page) {\n// \t\tconst URL = `http://192.168.100.8:8080/api/v1/profile?page=\n// \t\t\t\t\t ${current_page}`\n// \t\tthis.props.HideLoadedUsers()\n// \t\tthis.props.toggleIsFetching(true)\n// \t\taxios.get(URL)\n// \t\t\t.then(response => {\n// \t\t\t\tthis.props.toggleIsFetching(false)\n// \t\t\t\tthis.props.set_current_page(current_page)\n// \t\t\t\treturn this.setBase(response, this.props)\n// \t\t\t})\n// \t\t\t.catch(error => console.log(`FAIL ${error}`))\n// \t}\n// \tsetBase(response, props) {\n// \t\tprops.set_users(response)\n// \t\tprops.set_page_size(response.data.results.length)\n// \t\tprops.set_page_count(response.data.count)\n// \t\treturn response\n// \t}\n// \tcomponentDidMount() {\n// \t\tconst BASE_URL = 'http://192.168.100.8:8080/api/v1/profile?page=1'\n// \t\tthis.props.toggleIsFetching(true)\n// \t\taxios.get(BASE_URL)\n// \t\t\t.then(response => {\n// \t\t\t\tthis.props.toggleIsFetching(false)\n// \t\t\t\treturn this.setBase(response, this.props)\n// \t\t\t})\n// \t\t\t.catch(error => console.log(`FAIL ${error}`))\n// \t}\n// }\n\n// const Users = () => {\n// \tlet { users } = useSelector(state => state.usersPage)\n// \tlet dispatch = useDispatch()\n//\n// \tconst setUsers = () => {\n// \t\taxios.get(`http://192.168.100.8:8080/api/v1/profile`)\n// \t\t\t.then(\n// \t\t\t\tresponse => {\n// \t\t\t\t\tdispatch(\n// \t\t\t\t\t\tSetUsers(response.data.results)\n// \t\t\t\t\t)\n// \t\t\t\t}\n// \t\t\t)\n// \t\t\t.catch(err => console.log(`FAIL ${err}`))\n// \t}\n//\n// \tsetUsers()\n//\n// \tlet user_items = users.map(\n// \t\tuser => <ItemUser key={ user.id }\n// \t\t\t\t\t\t  id={ user.id }\n// \t\t\t\t\t\t  name={ user.username }\n// \t\t\t\t\t\t  description={ user.description }\n// \t\t\t\t\t\t  country={ user.country }\n// \t\t\t\t\t\t  city={ user.city }/>)\n// \treturn (\n// \t\t<div className='users'>\n// \t\t\t<RightArrow title='Users'/>\n// \t\t\t<div className=\"users__body\">{ user_items }</div>\n// \t\t\t<ShowMoreButton setUsers={ setUsers }/>\n// \t\t</div>\n// \t)\n// }\n// export default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["PageTitle","ItemUser","connect","useDispatch","useSelector","HideLoadedUsers","SetCurrentPage","SetPageCount","SetPageSize","SetUsers","ToggleIsFetching","UpdateCurrentPageOnArrows","axios","React","useEffect","LeftArrow","RightArrow","UsersPaginationActions","Preloader","jsxDEV","_jsxDEV","Users","props","_s","dispatch","users","page_size","page_count","current_page","isFetching","state","usersPage","updateCurrentPageOnArrows","pagination_action","URL","toggleIsFetching","get","then","response","update_current_page_on_arrows","setBase","catch","error","console","log","updateCurrentPage","set_current_page","set_users","set_page_size","data","results","length","set_page_count","count","BASE_URL","user_items","map","user","id","name","username","description","country","city","fileName","_jsxFileName","lineNumber","columnNumber","pages","page_numbers","Array","keys","splice","previous","Previous","next","Next","className","children","title","onClick","page_number","classname","_c","mapDispatchToProps","mapStateToProps","$RefreshReg$"],"sources":["/home/adm1/Desktop/react/projects/project_1/frontend/src/components/Main/Pages/Users/Users.jsx"],"sourcesContent":["import './Users.css';\nimport PageTitle from \"../../../../shared/PageTitle/PageTitle\";\nimport ItemUser from \"./ItemUser/ItemUser\";\nimport {connect, useDispatch, useSelector} from \"react-redux\";\nimport {\n\tHideLoadedUsers,\n\tSetCurrentPage,\n\tSetPageCount,\n\tSetPageSize,\n\tSetUsers, ToggleIsFetching, UpdateCurrentPageOnArrows\n} from \"../../../../redux/ActionCreators\";\nimport axios from \"axios\";\nimport React, {useEffect} from 'react';\nimport LeftArrow from \"../../../../shared/LeftArrow/LeftArrow\";\nimport RightArrow from \"../../../../shared/RightArrow/RightArrow\";\nimport {UsersPaginationActions} from \"../../../../redux/UsersPaginationActions\";\nimport Preloader from \"../../../../shared/Preloader/Preloader\";\n\n\nconst Users = (props) => {\n\tlet dispatch = useDispatch()\n\tlet {users, page_size, page_count, current_page, isFetching} = useSelector(state => state.usersPage)\n\n\n\tconst updateCurrentPageOnArrows = (current_page, pagination_action) => {\n\t\tconst URL = `http://192.168.100.8:8080/api/v1/profile?page=\n\t\t             ${current_page}`\n\t\tprops.HideLoadedUsers()\n\t\tprops.toggleIsFetching(true)\n\t\taxios.get(URL)\n\t\t\t.then(response => {\n\t\t\t\tprops.update_current_page_on_arrows(pagination_action)\n\t\t\t\treturn setBase(response, props)\n\t\t\t}).catch(error => console.log(`FAIL ${error}`))\n\t}\n\tconst updateCurrentPage = current_page => {\n\t\tconst URL = `http://192.168.100.8:8080/api/v1/profile?page=\n\t\t\t\t\t ${current_page}`\n\t\tprops.HideLoadedUsers()\n\t\tprops.toggleIsFetching(true)\n\t\taxios.get(URL)\n\t\t\t.then(response => {\n\t\t\t\tprops.set_current_page(current_page)\n\t\t\t\treturn setBase(response, props)\n\t\t\t}).catch(error => console.log(`FAIL ${error}`))\n\t}\n\tconst setBase = (response, props) => {\n\t\tprops.toggleIsFetching(false)\n\t\tprops.set_users(response)\n\t\tprops.set_page_size(response.data.results.length)\n\t\tprops.set_page_count(response.data.count)\n\t\treturn response\n\t}\n\tuseEffect(() => {\n\t\tconst BASE_URL = 'http://192.168.100.8:8080/api/v1/profile?page=1'\n\t\tprops.toggleIsFetching(true)\n\t\taxios.get(BASE_URL)\n\t\t\t.then(response => {\n\t\t\t\treturn setBase(response, this.props)\n\t\t\t}).catch(error => console.log(`FAIL ${error}`))\n\t}, [])\n\n\n\tconst user_items = props.users.map(\n\t\tuser => <ItemUser key={ user.id }\n\t\t\t\t\t\t  id={ user.id }\n\t\t\t\t\t\t  name={ user.username }\n\t\t\t\t\t\t  description={ user.description }\n\t\t\t\t\t\t  country={ user.country }\n\t\t\t\t\t\t  city={ user.city }/>)\n\n\tconst pages = props.page_count / props.page_size\n\tconst page_numbers = pages ? [...Array(pages+1).keys()].splice(1) : []\n\tconst previous = () => updateCurrentPageOnArrows(\n\t\tprops.current_page, UsersPaginationActions.Previous\n\t)\n\tconst next = () => updateCurrentPageOnArrows(\n\t\tprops.current_page, UsersPaginationActions.Next\n\t)\n\treturn <div className='users'>\n\t\t\t<PageTitle title='Users'/>\n\t\t\t<div className=\"users__body\">\n\t\t\t\t{ props.isFetching && <Preloader/>}\n\t\t\t\t{ user_items }\n\t\t\t</div>\n\t\t\t<div className=\"pagination\">\n\t\t\t\t<div className=\"pagination__container\">\n\t\t\t\t\t<span className='pagination__left_arrow'\n\t\t\t\t\t\t  onClick={ previous }>\n\t\t\t\t\t\t<LeftArrow/>\n\t\t\t\t\t</span>\n\t\t\t\t\t{ page_numbers.map(page_number => {\n\t\t\t\t\t\tconst classname = `pagination__item${\n\t\t\t\t\t\t\tprops.current_page === page_number ? \" selected\" : \"\"\n\t\t\t\t\t\t}`\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<span className={ classname }\n\t\t\t\t\t\t\t\t  onClick={ () => updateCurrentPage(page_number) }>\n\t\t\t\t\t\t\t\t  { page_number }\n\t\t\t\t\t\t\t</span>)\n\t\t\t\t\t}) }\n\t\t\t\t\t<span className='pagination__right_arrow'\n\t\t\t\t\t\t  onClick={ next }>\n\t\t\t\t\t\t<RightArrow/>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n\tset_users: response => dispatch(SetUsers(response.data.results)),\n\tset_page_size: page_size => dispatch(SetPageSize(page_size)),\n\tset_page_count: page_count => dispatch(SetPageCount(page_count)),\n\tset_current_page: current_page => dispatch(SetCurrentPage(current_page)),\n\tupdate_current_page_on_arrows: pagination_action => {\n\t\tdispatch(UpdateCurrentPageOnArrows(pagination_action))\n\t},\n\ttoggleIsFetching: isFetching => dispatch(ToggleIsFetching(isFetching)),\n\tHideLoadedUsers: () => dispatch(HideLoadedUsers())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)\n\n\n// class Users extends React.Component {\n// \trender() {\n// \t\tlet props = this.props\n// \t\tconst user_items = props.users.map(\n// \t\t\tuser => <ItemUser key={ user.id }\n// \t\t\t\t\t\t\t  id={ user.id }\n// \t\t\t\t\t\t\t  name={ user.username }\n// \t\t\t\t\t\t\t  description={ user.description }\n// \t\t\t\t\t\t\t  country={ user.country }\n// \t\t\t\t\t\t\t  city={ user.city }/>)\n//\n// \t\tconst pages = props.page_count / props.page_size\n// \t\tconst page_numbers = pages ? [...Array(pages+1).keys()].splice(1) : []\n// \t\tconst previous = () => this.updateCurrentPageOnArrows(\n// \t\t\tprops.current_page, UsersPaginationActions.Previous\n// \t\t)\n// \t\tconst next = () => this.updateCurrentPageOnArrows(\n// \t\t\tprops.current_page, UsersPaginationActions.Next\n// \t\t)\n// \t\treturn <div className='users'>\n// \t\t\t\t<PageTitle title='Users'/>\n// \t\t\t\t<div className=\"users__body\">\n// \t\t\t\t\t{ props.isFetching && <Preloader/>}\n// \t\t\t\t\t{ user_items }\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"pagination\">\n// \t\t\t\t\t<div className=\"pagination__container\">\n// \t\t\t\t\t\t<span className='pagination__left_arrow'\n// \t\t\t\t\t\t\t  onClick={ previous }>\n// \t\t\t\t\t\t\t<LeftArrow/>\n// \t\t\t\t\t\t</span>\n// \t\t\t\t\t\t{ page_numbers.map(page_number => {\n// \t\t\t\t\t\t\tconst classname = `pagination__item${\n// \t\t\t\t\t\t\t\tprops.current_page === page_number ? \" selected\" : \"\"\n// \t\t\t\t\t\t\t}`\n// \t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t<span className={ classname }\n// \t\t\t\t\t\t\t\t\t  onClick={\n// \t\t\t\t\t\t\t\t\t  () => this.updateCurrentPage(page_number)\n// \t\t\t\t\t\t\t\t\t  }>\n// \t\t\t\t\t\t\t\t\t  { page_number }\n// \t\t\t\t\t\t\t\t</span>)\n// \t\t\t\t\t\t}) }\n// \t\t\t\t\t\t<span className='pagination__right_arrow'\n// \t\t\t\t\t\t\t  onClick={ next }>\n// \t\t\t\t\t\t\t<RightArrow/>\n// \t\t\t\t\t\t</span>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t}\n// \tupdateCurrentPageOnArrows(current_page, pagination_action) {\n// \t\tconst URL = `http://192.168.100.8:8080/api/v1/profile?page=\n// \t\t\t\t\t ${current_page}`\n// \t\tthis.props.HideLoadedUsers()\n// \t\tthis.props.toggleIsFetching(true)\n// \t\taxios.get(URL)\n// \t\t\t.then(response => {\n// \t\t\t\tthis.props.toggleIsFetching(false)\n// \t\t\t\tthis.props.update_current_page_on_arrows(pagination_action)\n// \t\t\t\treturn this.setBase(response, this.props)\n// \t\t\t})\n// \t\t\t.catch(error => console.log(`FAIL ${error}`))\n// \t}\n// \tupdateCurrentPage(current_page) {\n// \t\tconst URL = `http://192.168.100.8:8080/api/v1/profile?page=\n// \t\t\t\t\t ${current_page}`\n// \t\tthis.props.HideLoadedUsers()\n// \t\tthis.props.toggleIsFetching(true)\n// \t\taxios.get(URL)\n// \t\t\t.then(response => {\n// \t\t\t\tthis.props.toggleIsFetching(false)\n// \t\t\t\tthis.props.set_current_page(current_page)\n// \t\t\t\treturn this.setBase(response, this.props)\n// \t\t\t})\n// \t\t\t.catch(error => console.log(`FAIL ${error}`))\n// \t}\n// \tsetBase(response, props) {\n// \t\tprops.set_users(response)\n// \t\tprops.set_page_size(response.data.results.length)\n// \t\tprops.set_page_count(response.data.count)\n// \t\treturn response\n// \t}\n// \tcomponentDidMount() {\n// \t\tconst BASE_URL = 'http://192.168.100.8:8080/api/v1/profile?page=1'\n// \t\tthis.props.toggleIsFetching(true)\n// \t\taxios.get(BASE_URL)\n// \t\t\t.then(response => {\n// \t\t\t\tthis.props.toggleIsFetching(false)\n// \t\t\t\treturn this.setBase(response, this.props)\n// \t\t\t})\n// \t\t\t.catch(error => console.log(`FAIL ${error}`))\n// \t}\n// }\n\n// const Users = () => {\n// \tlet { users } = useSelector(state => state.usersPage)\n// \tlet dispatch = useDispatch()\n//\n// \tconst setUsers = () => {\n// \t\taxios.get(`http://192.168.100.8:8080/api/v1/profile`)\n// \t\t\t.then(\n// \t\t\t\tresponse => {\n// \t\t\t\t\tdispatch(\n// \t\t\t\t\t\tSetUsers(response.data.results)\n// \t\t\t\t\t)\n// \t\t\t\t}\n// \t\t\t)\n// \t\t\t.catch(err => console.log(`FAIL ${err}`))\n// \t}\n//\n// \tsetUsers()\n//\n// \tlet user_items = users.map(\n// \t\tuser => <ItemUser key={ user.id }\n// \t\t\t\t\t\t  id={ user.id }\n// \t\t\t\t\t\t  name={ user.username }\n// \t\t\t\t\t\t  description={ user.description }\n// \t\t\t\t\t\t  country={ user.country }\n// \t\t\t\t\t\t  city={ user.city }/>)\n// \treturn (\n// \t\t<div className='users'>\n// \t\t\t<RightArrow title='Users'/>\n// \t\t\t<div className=\"users__body\">{ user_items }</div>\n// \t\t\t<ShowMoreButton setUsers={ setUsers }/>\n// \t\t</div>\n// \t)\n// }\n// export default Users;\n"],"mappings":"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,EAAEN,UAAU,IAAIL,QAAQ,CAACd,gBAAgB,CAACmB,UAAU,CAAC,CAAC;EACtExB,eAAe,EAAEA,CAAA,KAAMmB,QAAQ,CAACnB,eAAe,CAAC,CAAC;AAClD,CAAC,CAAC;AAEF,eAAeH,OAAO,CAACmF,eAAe,EAAED,kBAAkB,CAAC,CAAC/D,KAAK,CAAC;;AAGlE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA8D,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}