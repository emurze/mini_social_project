{"ast":null,"code":"import './Users.css';\nimport PageTitle from \"../../../../shared/PageTitle/PageTitle\";\nimport ItemUser from \"./ItemUser/ItemUser\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport ShowMoreButton from \"./ShowMoreButton/ShowMoreButton\";\nimport { SetUsers } from \"../../../../redux/ActionCreators\";\nimport axios from \"axios\";\nimport React from 'react';\n\n// class Users extends React.Component {\n// \tconstructor(props) {\n// \t\tsuper(props)\n// \t}\n//\n// \tsetUsers = () => {\n// \t\taxios.get(`http://192.168.100.8:8080/api/v1/profile`)\n// \t\t\t.then(this.props.set_users)\n// \t\t\t.catch(err => console.log(`FAIL ${err}`))\n// \t}\n// \trender() {\n// \t\tconst user_items = this.props.users.map(\n// \t\t\tuser => <ItemUser key={ user.id }\n// \t\t\t\t\t\t\t  id={ user.id }\n// \t\t\t\t\t\t\t  name={ user.username }\n// \t\t\t\t\t\t\t  description={ user.description }\n// \t\t\t\t\t\t\t  country={ user.country }\n// \t\t\t\t\t\t\t  city={ user.city }/>)\n//\n// \t\treturn <div className='users'>\n// \t\t\t\t<PageTitle title='Users'/>\n// \t\t\t\t<div className=\"users__body\">{ user_items }</div>\n// \t\t\t\t<ShowMoreButton setUsers={ this.setUsers }/>\n// \t\t\t</div>\n// \t}\n// \tcomponentDidMount() { this.setUsers() }\n// }\n//\n// const mapStateToProps = (state) => ({'users': state.usersPage.users})\n// const mapDispatchToProps = (dispatch) => ({\n// \tset_users: response => {\n// \t\tconst action = SetUsers(response.data.results)\n// \t\tdispatch(action)\n// \t}\n// })\n//\n// export default connect(mapStateToProps, mapDispatchToProps)(Users)\n\n// const Users = () => {\n// \tlet { users } = useSelector(state => state.usersPage)\n// \tlet dispatch = useDispatch()\n//\n// \tconst setUsers = () => {\n// \t\tif (users.length === 0) {\n// \t\t\taxios.get(`http://192.168.100.8:8080/api/v1/profile`)\n// \t\t\t\t.then(\n// \t\t\t\t\tresponse => {\n// \t\t\t\t\t\tdispatch(\n// \t\t\t\t\t\t\tSetUsers(response.data)\n// \t\t\t\t\t\t)\n// \t\t\t\t\t}\n// \t\t\t\t)\n// \t\t\t\t.catch(err => console.log(`FAIL ${err}`))\n// \t\t}\n// \t}\n// \tlet user_items = users.map(\n// \t\tuser => <ItemUser key={ user.id }\n// \t\t\t\t\t\t  id={ user.id }\n// \t\t\t\t\t\t  name={ user.username }\n// \t\t\t\t\t\t  description={ user.description }\n// \t\t\t\t\t\t  country={ user.country }\n// \t\t\t\t\t\t  city={ user.city }/>)\n// \treturn (\n// \t\t<div className='users'>\n// \t\t\t<PageTitle title='Users'/>\n// \t\t\t<div className=\"users__body\">{ user_items }</div>\n// \t\t\t<ShowMoreButton setUsers={ setUsers }/>\n// \t\t</div>\n// \t)\n// }\n// export default Users;","map":{"version":3,"names":["PageTitle","ItemUser","connect","useDispatch","useSelector","ShowMoreButton","SetUsers","axios","React"],"sources":["/home/adm1/Desktop/react/projects/project_1/frontend/src/components/Main/Pages/Users/Users.jsx"],"sourcesContent":["import './Users.css';\nimport PageTitle from \"../../../../shared/PageTitle/PageTitle\";\nimport ItemUser from \"./ItemUser/ItemUser\";\nimport {connect, useDispatch, useSelector} from \"react-redux\";\nimport ShowMoreButton from \"./ShowMoreButton/ShowMoreButton\";\nimport {SetUsers} from \"../../../../redux/ActionCreators\";\nimport axios from \"axios\";\nimport React from 'react';\n\n\n// class Users extends React.Component {\n// \tconstructor(props) {\n// \t\tsuper(props)\n// \t}\n//\n// \tsetUsers = () => {\n// \t\taxios.get(`http://192.168.100.8:8080/api/v1/profile`)\n// \t\t\t.then(this.props.set_users)\n// \t\t\t.catch(err => console.log(`FAIL ${err}`))\n// \t}\n// \trender() {\n// \t\tconst user_items = this.props.users.map(\n// \t\t\tuser => <ItemUser key={ user.id }\n// \t\t\t\t\t\t\t  id={ user.id }\n// \t\t\t\t\t\t\t  name={ user.username }\n// \t\t\t\t\t\t\t  description={ user.description }\n// \t\t\t\t\t\t\t  country={ user.country }\n// \t\t\t\t\t\t\t  city={ user.city }/>)\n//\n// \t\treturn <div className='users'>\n// \t\t\t\t<PageTitle title='Users'/>\n// \t\t\t\t<div className=\"users__body\">{ user_items }</div>\n// \t\t\t\t<ShowMoreButton setUsers={ this.setUsers }/>\n// \t\t\t</div>\n// \t}\n// \tcomponentDidMount() { this.setUsers() }\n// }\n//\n// const mapStateToProps = (state) => ({'users': state.usersPage.users})\n// const mapDispatchToProps = (dispatch) => ({\n// \tset_users: response => {\n// \t\tconst action = SetUsers(response.data.results)\n// \t\tdispatch(action)\n// \t}\n// })\n//\n// export default connect(mapStateToProps, mapDispatchToProps)(Users)\n\n// const Users = () => {\n// \tlet { users } = useSelector(state => state.usersPage)\n// \tlet dispatch = useDispatch()\n//\n// \tconst setUsers = () => {\n// \t\tif (users.length === 0) {\n// \t\t\taxios.get(`http://192.168.100.8:8080/api/v1/profile`)\n// \t\t\t\t.then(\n// \t\t\t\t\tresponse => {\n// \t\t\t\t\t\tdispatch(\n// \t\t\t\t\t\t\tSetUsers(response.data)\n// \t\t\t\t\t\t)\n// \t\t\t\t\t}\n// \t\t\t\t)\n// \t\t\t\t.catch(err => console.log(`FAIL ${err}`))\n// \t\t}\n// \t}\n// \tlet user_items = users.map(\n// \t\tuser => <ItemUser key={ user.id }\n// \t\t\t\t\t\t  id={ user.id }\n// \t\t\t\t\t\t  name={ user.username }\n// \t\t\t\t\t\t  description={ user.description }\n// \t\t\t\t\t\t  country={ user.country }\n// \t\t\t\t\t\t  city={ user.city }/>)\n// \treturn (\n// \t\t<div className='users'>\n// \t\t\t<PageTitle title='Users'/>\n// \t\t\t<div className=\"users__body\">{ user_items }</div>\n// \t\t\t<ShowMoreButton setUsers={ setUsers }/>\n// \t\t</div>\n// \t)\n// }\n// export default Users;\n"],"mappings":"AAAA,OAAO,aAAa;AACpB,OAAOA,SAAS,MAAM,wCAAwC;AAC9D,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAAQC,OAAO,EAAEC,WAAW,EAAEC,WAAW,QAAO,aAAa;AAC7D,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,SAAQC,QAAQ,QAAO,kCAAkC;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}